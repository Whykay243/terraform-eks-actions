name: Deploy EKS via Terraform

on:
  push:
    branches: [main]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  BUCKET_NAME: realcloud-tfstate-bucket-001
  TF_KEY: eks/terraform.tfstate
  KMS_ALIAS_ARN: arn:aws:kms:us-east-2:361769567498:alias/eks/app-eks-cluster

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::361769567498:role/GitHubActionsTerraformRole
          aws-region: us-east-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          terraform init \
          -backend-config="bucket=${{ env.BUCKET_NAME }}" \
          -backend-config="key=${{ env.TF_KEY }}"  \
          -backend-config="region=us-east-1"

      - name: Terraform Validate
        run: terraform validate

      - name: Check if KMS Alias exists
        id: check-kms
        run: |
            # Check if KMS alias exists
            if aws kms list-aliases --region ${{ env.AWS_REGION }} | grep -q "${{ env.KMS_ALIAS_ARN }}"; then
            echo "KMS alias already exists. Skipping import."
            echo "exists=true" >> $GITHUB_ENV
            else
            echo "KMS alias does not exist. Proceeding with import."
            echo "exists=false" >> $GITHUB_ENV
            fi

      - name: Import KMS Alias if not exists
        if: env.exists == 'false'
        run: |
            terraform import 'module.eks.module.kms.aws_kms_alias.this["cluster"]' ${{ env.KMS_ALIAS_ARN }}

      - name: Terraform Plan
        run: terraform plan

#      - name: Terraform Destroy
#        run: terraform destroy -auto-approve
#        if: github.ref == 'refs/heads/main'

      - name: Terraform Apply
        run: terraform apply -auto-approve
        if: github.ref == 'refs/heads/main'
