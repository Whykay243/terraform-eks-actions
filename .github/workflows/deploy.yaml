name: Deploy EKS via Terraform

on:
  push:
    branches: [main]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  BUCKET_NAME: physicstutors-001
  TF_KEY: eks/terraform.tfstate
  TF_REGION: us-east-1

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::755852738025:role/Aws-Githubaction-Connection
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          terraform init \
          -backend-config="bucket=${{ env.BUCKET_NAME }}" \
          -backend-config="key=${{ env.TF_KEY }}" \
          -backend-config="region=${{ env.TF_REGION }}"

      - name: Terraform Validate
        run: terraform validate

      - name: Import Existing Resources if Present
        run: |
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
          
          # Import KMS alias if it exists
          if aws kms list-aliases --query "Aliases[?AliasName=='alias/eks/app-eks-cluster']" --output text | grep -q 'alias/eks/app-eks-cluster'; then
            echo "Importing existing KMS alias"
            terraform import 'module.eks.module.kms.aws_kms_alias.this["cluster"]' arn:aws:kms:${{ env.AWS_REGION }}:$AWS_ACCOUNT_ID:alias/eks/app-eks-cluster || true
          fi

          # Import CloudWatch log group if it exists
          if aws logs describe-log-groups --log-group-name-prefix "/aws/eks/app-eks-cluster/cluster" \
            --query "logGroups[?logGroupName=='/aws/eks/app-eks-cluster/cluster']" \
            --output text | grep -q '/aws/eks/app-eks-cluster/cluster'; then
            echo "Importing existing CloudWatch log group"
            terraform import 'module.eks.aws_cloudwatch_log_group.this[0]' /aws/eks/app-eks-cluster/cluster || true
          fi

      - name: Terraform Plan
        run: terraform plan -out=tfplan.out

      - name: Terraform Apply
        run: terraform apply -auto-approve
        if: github.ref == 'refs/heads/main'

      # Optional: Terraform Destroy (commented out for safety)
      # - name: Terraform Destroy
      #   run: terraform destroy -auto-approve
      #   if: github.ref == 'refs/heads/main'
